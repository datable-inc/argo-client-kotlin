package jp.datable.argo.workflow.client.models.openapi

data class WfWorkflowSpec(
    val activeDeadlineSeconds: Int? = null,
    val affinity: CoreAffinity? = null,
    val archiveLogs: Boolean? = null,
    val arguments: WfArguments? = null,
    val artifactGC: WfArtifactGC? = null,
    val artifactRepositoryRef: WfArtifactRepositoryRef? = null,
    val automountServiceAccountToken: Boolean? = null,
    val dnsConfig: CorePodDNSConfig? = null,
    val dnsPolicy: String? = null,
    val entrypoint: String? = null,
    val executor: WfExecutorConfig? = null,
    val hooks: Map<String, WfLifecycleHook>? = null,
    val hostAliases: List<CoreHostAlias>? = null,
    val hostNetwork: Boolean? = null,
    val imagePullSecrets: List<CoreLocalObjectReference>? = null,
    val metrics: WfMetrics? = null,
    val nodeSelector: Map<String, String>? = null,
    val onExit: String? = null,
    val parallelism: Int? = null,
    val podDisruptionBudget: PodDisruptionBudgetSpec? = null,
    val podGC: WfPodGC? = null,
    val podMetadata: WfMetadata? = null,
    val podPriority: Int? = null,
    val podPriorityClassName: String? = null,
    val podSpecPatch: String? = null,
    val priority: Int? = null,
    val retryStrategy: WfRetryStrategy? = null,
    val schedulerName: String? = null,
    val securityContext: CorePodSecurityContext? = null,
    val serviceAccountName: String? = null,
    val shutdown: String? = null,
    val `suspend`: Boolean? = null,
    val synchronization: WfSynchronization? = null,
    val templateDefaults: WfTemplate? = null,
    val templates: List<WfTemplate>? = null,
    val tolerations: List<CoreToleration>? = null,
    val ttlStrategy: WfTTLStrategy? = null,
    val volumeClaimGC: WfVolumeClaimGC? = null,
    val volumeClaimTemplates: List<CorePersistentVolumeClaim>? = null,
    val volumes: List<CoreVolume>? = null,
    val workflowMetadata: WfWorkflowMetadata? = null,
    val workflowTemplateRef: WfWorkflowTemplateRef? = null
)
