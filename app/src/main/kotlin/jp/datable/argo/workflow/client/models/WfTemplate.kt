package jp.datable.argo.workflow.client.models

data class WfTemplate(
    val activeDeadlineSeconds: String?,
    val affinity: CoreAffinity?,
    val archiveLocation: WfArtifactLocation?,
    val automountServiceAccountToken: Boolean?,
    val container: CoreContainer?,
    val containerSet: WfContainerSetTemplate?,
    val daemon: Boolean?,
    val dag: WfDAGTemplate?,
    val `data`: WfData?,
    val executor: WfExecutorConfig?,
    val failFast: Boolean?,
    val hostAliases: List<CoreHostAlias>?,
    val http: WfHTTP?,
    val initContainers: List<WfUserContainer>?,
    val inputs: WfInputs?,
    val memoize: WfMemoize?,
    val metadata: WfMetadata?,
    val metrics: WfMetrics?,
    val name: String?,
    val nodeSelector: Map<String, String>?,
    val outputs: WfOutputs?,
    val parallelism: Int?,
    val plugin: Any?,
    val podSpecPatch: String?,
    val priority: Int?,
    val priorityClassName: String?,
    val resource: WfResourceTemplate?,
    val retryStrategy: WfRetryStrategy?,
    val schedulerName: String?,
    val script: WfScriptTemplate?,
    val securityContext: CorePodSecurityContext?,
    val serviceAccountName: String?,
    val sidecars: List<WfUserContainer>?,
    val steps: List<List<WfWorkflowStep>>?,
    val `suspend`: WfSuspendTemplate?,
    val synchronization: WfSynchronization?,
    val timeout: String?,
    val tolerations: List<CoreToleration>?,
    val volumes: List<CoreVolume>?
)
